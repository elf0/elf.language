version: 0
//License: Public Domain
//Author: elf
//EMail: elf@iamelf.com

DoubleList: List

import{
 elf.List
 elf.DoubleNode
}

List{
$Reset:
  .entry.Reset()

$Initialize:
  Reset()

$Empty:
  return "Is .entry Alone?"


$Empty: not
  return .entry is not Alone

$Front:
  return entry.Next

$Back:
  return entry.Prev


$Insert: node, where
  node.Link(where.Prev, where)


$InsertAfter: node, where
  node.Link(where, where.Next)


$Remove: node
  node.Unlink()


//push back
$Push: node
  node.Link(entry.Prev, entry)


//pop front
$Pop: -> node
  node = entry.Next
  node.Unlink()
  $Unlink node


$PushFront: node
  node.Link(entry, entry.Next)
  $Link node entry entry.Next


$PopBack: -> node
  node = entry.Prev
  node.Unlink()
  $Unlink node


$MoveNodeToFront: node
  Remove(node)
  PushFront(node)

  $Remove node
  $PushFront node


//move to back
$MoveTo: target
  .entry.MoveBuddiesTo(target.entry)
  $.entry.MoveBuddiesTo target.entry


$MoveToFront: target
  .entry.MoveBuddiesToFront(target.entry)


$Swap: target
  .entry.SwapBuddies(target.entry)
  $.entry.SwapBuddies target.entry

private:
  entry: DoubleNode
}List
