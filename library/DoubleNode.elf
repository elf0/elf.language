version: 0
//License: Public Domain
//Author: elf
//EMail: elf198012@gmail.com

root: elf.DoubleNode

class{
 Next: get This{
   return .next;
 }
 
 Prev: get This{
   return .prev;
 }

 LinkNext: function(node: = This){
  .next = node
  node.prev = this
 }
 
 LinkPrev: function(node: = This){
  .prev = node
  node.next = this
 }

 Link: function(prev: = This, next: = This){
  .LinkPrev(prev)
  .LinkNext(next)
 }

 Unlink: function{
  .prev.next = .next
  .next.prev = .prev
 }

 Reset: function{
  .prev = .next = this
 }

 Alone: is{
  return .next == this
 }

 Alone: is not{
  return .next != this
 }

 MoveBuddiesTo: function(target: = This){
  .next.LinkPrev(target.prev)
  .prev.LinkNext(target)
  .Reset(this)
 }

 MoveBuddiesToFront: function(target: = This){
  .next.LinkPrev(target)
  .prev.LinkNext(target.next)
  .Reset(this)
 }

 SwapBuddies: function(target: = This){
  tmp: This
  tmp.Reset()
  .MoveBuddiesTo(tmp)
  target.MoveBuddiesTo(this)
  tmp.MoveBuddiesTo(target)
 }
private:
 next: This
 prev: This 
}
