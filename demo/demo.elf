version: 0

root: elf.demo

//constant
i: 0
pi: 3.1415926
hello: "Hello, World!"
location: {0.0, 0.0}

//variable
i: U32{0}
point0: Point{0, 0}

//reference point0
point1: point0

//Use type of point0, Assign new value
point2: point0{1, 1}

//Function constant.
//No input and output
F0(){
}

//Only input
F0(a: U32, b: U32){
}

//Input a writable object "a"
F0(a: = U32){
}

//Only Output
F0->(result: U32){
}

F0(a: U32, b: U32)->(result: U32){
}

//Function variable.
//No input and output
F0: function = {
}

//Only input
F0: function(a: U32, b: U32){
}

//Only Output
F0: function->(result: U32){
}

F0: function(a: U32, b: U32)->(result: U32){
}

//error code or exception?
Div: function(a: U32, b: U32)->(result: U32)error[DivByZero]{
 if(b == 0)
  error = DivByZero
 result = a / b
}

//type definition?
F0(a: U32, b: U32)->(result: U32)

//class
A{
 a: i32
}

B{
 b: i32
}

C: A, B{
 c: i32
}

//propery

Name: ->string

Name: set string

//index
Value: index(Key: string)->string
